<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CrmTechTitans</title>

    <!-- Stylesheets -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/tables.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/cards.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/details.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" />

    @await RenderSectionAsync("Styles", required: false)

    <style>
        :root {
            --sidebar-width: 14rem;
            --sidebar-bg: #2e2e2e;
            --sidebar-color: #fff;
            --sidebar-hover: rgba(255, 255, 255, 0.2);
            --transition-speed: 0.3s;
        }

        body {
            overflow-x: hidden;
            padding: 0;
            margin: 0;
        }

        /* === Top Navigation Bar === */
        .top-navbar {
            position: fixed;
            top: 0;
            left: var(--sidebar-width);
            right: 0;
            height: 60px; /* Match the height of your logo */
            background-color: white;
            display: flex;
            align-items: center;
            padding: 0 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            z-index: 999;
            transition: left var(--transition-speed) ease-in-out;
        }

        /* When Sidebar is Hidden */
        .sidebar.hidden ~ .top-navbar {
            left: 0;
        }

        /* === Sidebar Styling === */
        .sidebar {
            position: fixed;
            left: 0;
            top: 0;
            width: var(--sidebar-width);
            height: 100%;
            background: var(--sidebar-bg);
            color: var(--sidebar-color);
            display: flex;
            flex-direction: column;
            padding: 0;
            transition: transform var(--transition-speed) ease-in-out;
            z-index: 1000;
        }

        /* UPDATED LOGO STYLES - FULL CORNER FIT */
        .sidebar-logo {
            width: 100%;
            margin: 0;
            padding: 0;
            background-color: var(--sidebar-bg);
            display: block;
        }

            .sidebar-logo img {
                width: 100%;
                display: block;
                height: auto;
                max-height: none;
                padding: 0;
                margin: 0;
            }

        /* Navigation links container */
        .sidebar-nav {
            display: flex;
            flex-direction: column;
            padding: 18px;
            margin-top: 10px;
        }

        .sidebar a {
            display: flex;
            align-items: center;
            padding: 12px;
            font-size: 14px;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            transition: background 0.3s ease-in-out;
        }

            .sidebar a i {
                margin-right: 10px;
                font-size: 1.2rem;
            }

            .sidebar a:hover {
                background: rgba(255, 255, 255, 0.2);
            }

            .sidebar a.active {
                background: rgba(255, 255, 255, 0.15);
                font-weight: 600;
            }

        .sidebar-toggle {
            position: fixed;
            top: 15px;
            left: 240px;
            background: #2e2e2e;
            color: white;
            border: none;
            padding: 10px 12px;
            border-radius: 5px;
            cursor: pointer;
            transition: left 0.3s ease-in-out;
            z-index: 1100;
        }

        /* === Main Content Adjustments === */
        .content-container {
            margin-left: var(--sidebar-width);
            margin-top: 60px; /* Add top margin to account for top navbar */
            padding: 20px;
            transition: margin-left var(--transition-speed) ease-in-out;
        }

        /* When Sidebar is Hidden */
        .sidebar.hidden {
            transform: translateX(-100%);
        }

            .sidebar.hidden + .content-container {
                margin-left: 0;
            }

            .sidebar.hidden ~ .sidebar-toggle {
                left: 15px;
            }
    </style>
</head>
<body>
    <!-- Sidebar Toggle Button -->

    <div class="main-container">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="sidebar-logo">
                <img src="~/images/Logo.png" alt="Company Logo">
            </div>
            <div class="sidebar-nav">
                <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "active" : "")"
                   asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="fas fa-home"></i> Dashboard
                </a>
                <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Member" ? "active" : "")"
                   asp-area="" asp-controller="Member" asp-action="Index">
                    <i class="fas fa-users"></i> Members
                </a>
                <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Contact" ? "active" : "")"
                   asp-area="" asp-controller="Contact" asp-action="Index">
                    <i class="fas fa-address-book"></i> Contacts
                </a>
                <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Address" ? "active" : "")"
                   asp-area="" asp-controller="Address" asp-action="Index">
                    <i class="fas fa-map-marker-alt"></i> Municipalities
                </a>
                <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Opportunity" ? "active" : "")"
                   asp-area="" asp-controller="Opportunity" asp-action="Index">
                    <i class="fas fa-briefcase"></i> Opportunities
                </a>
                <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Interaction" ? "active" : "")"
                   asp-area="" asp-controller="Interaction" asp-action="Index">
                    <i class="fas fa-comments"></i> Interactions
                </a>
                <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Industry" ? "active" : "")"
                   asp-area="" asp-controller="Industry" asp-action="Index">
                    <i class="fas fa-industry"></i> Industries
                </a>
            </div>
        </div>

        <!-- Top Navigation Bar - Empty for now -->
        <div class="top-navbar">
            <!-- Navigation links removed as requested -->
        </div>

        <!-- Main Content -->
        <div class="content-container" id="contentContainer">
            <main role="main" class="pb-3">
                @RenderBody()
            </main>
        </div>
    </div>

    <footer class="border-top footer text-muted"></footer>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/date-fns"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns@3.0.0"></script>

    <!-- Sidebar Toggle Script -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const sidebar = document.getElementById('sidebar');
            const sidebarToggle = document.getElementById('sidebarToggle');
            const contentContainer = document.getElementById('contentContainer');
            const topNavbar = document.querySelector('.top-navbar');
            const isMobile = window.innerWidth < 768;

            // Function to set sidebar state
            function setSidebarState(isOpen) {
                if (isOpen) {
                    sidebar.classList.remove('hidden');
                    if (isMobile) {
                        sidebar.classList.add('show');
                    }
                    sidebarToggle.style.left = '240px'; // Original position
                    localStorage.setItem('sidebarState', 'open');
                } else {
                    sidebar.classList.add('hidden');
                    if (isMobile) {
                        sidebar.classList.remove('show');
                    }
                    sidebarToggle.style.left = '15px';
                    localStorage.setItem('sidebarState', 'closed');
                }
            }

            // Check localStorage for previous state, default to OPEN
            const savedState = localStorage.getItem('sidebarState');

            // If on mobile, default to closed regardless of saved state
            if (isMobile) {
                setSidebarState(false);
            } else {
                // On desktop, use saved state or default to open
                setSidebarState(savedState !== 'closed');
            }

            // Toggle sidebar visibility when clicking the button
            sidebarToggle.addEventListener('click', function() {
                const isCurrentlyOpen = !sidebar.classList.contains('hidden') ||
                                       (isMobile && sidebar.classList.contains('show'));
                setSidebarState(!isCurrentlyOpen);
            });

            // Handle window resize
            window.addEventListener('resize', function() {
                const newIsMobile = window.innerWidth < 768;

                // Only take action if mobile state changed
                if (newIsMobile !== isMobile) {
                    // Apply appropriate sidebar state
                    if (newIsMobile) {
                        setSidebarState(false);
                    } else {
                        setSidebarState(localStorage.getItem('sidebarState') !== 'closed');
                    }
                }
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>