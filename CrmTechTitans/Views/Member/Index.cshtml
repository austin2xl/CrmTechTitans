@model IEnumerable<CrmTechTitans.Models.Member>

@{
    ViewData["Title"] = "All Members";
}
<partial name="_Notification" />

<div class="container-fluid">
    <header class="page-header d-flex justify-content-between align-items-center mb-4">
        <h1>All Members</h1>
        <div class="d-flex align-items-center gap-3">
            <a asp-action="Create" class="btn btn-primary" data-bs-toggle="tooltip" title="Add a new member to the system">
                <i class="fas fa-user-plus"></i> Create New Member
            </a>
            <div class="view-toggle">
                <button class="view-btn active" data-view="cards" data-bs-toggle="tooltip" title="Switch to Card View">
                    <i class="fas fa-th-large"></i>
                </button>
                <button class="view-btn" data-view="table" data-bs-toggle="tooltip" title="Switch to Table View">
                    <i class="fas fa-table"></i>
                </button>
            </div>
        </div>
    </header>

    <section class="filter-container bg-light p-3 rounded mb-4">
        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="memberNameFilter" class="form-label">Search by Member Name</label>
                <input type="text" id="memberNameFilter" class="form-control" placeholder="Enter member name">
            </div>
            <div class="col-md-6 mb-3">
                <label for="membershipStatusFilter" class="form-label">Filter by Member Status</label>
                <select id="membershipStatusFilter" class="form-select">
                    <option value="">All Statuses</option>
                    <option value="GoodStanding">Good Standing</option>
                    <option value="OutStanding">Out Standing</option>
                    <option value="Cancelled">Cancelled</option>
                </select>
            </div>
        </div>
    </section>

    <section class="members-grid" id="cards-view">
        @foreach (var item in Model)
        {
            <div class="member-card" data-name="@item.MemberName.ToLower()" data-status="@item.MembershipStatus.ToString().ToLower()">
                <div class="card-logo">
                    @if (item.MemberThumbnail?.Content != null)
                    {
                        string imageBase64 = Convert.ToBase64String(item.MemberThumbnail.Content);
                        string imageSrc = string.Format("data:{0};base64,{1}", item.MemberThumbnail.MimeType, imageBase64);
                        <img src="@imageSrc" alt="@item.MemberName Logo" class="img-fluid rounded" />
                    }
                    else
                    {
                        <i class="fas fa-building"></i>
                    }
                </div>
                <div class="card-content">
                    <div class="card-header">
                        <h2 class="company-name">@item.MemberName</h2>
                        <span class="status-badge status-@item.MembershipStatus.ToString().ToLower()">
                            @item.MembershipStatus
                        </span>
                    </div>
                    <div class="card-details">
                        <div class="detail-item">
                            <i class="fas fa-users"></i>
                            <span>@item.CompanySize</span>
                        </div>
                        <div class="detail-item">
                            <i class="fas fa-calendar-alt"></i>
                            <span>Member since @item.MemberSince.ToString("MMM yyyy")</span>
                        </div>
                        @if (!string.IsNullOrEmpty(item.CompanyWebsite))
                        {
                            <div class="detail-item">
                                <i class="fas fa-globe"></i>
                                <a href="@item.CompanyWebsite" target="_blank">Website</a>
                            </div>
                        }
                    </div>
                    <div class="membership-types">
                        <h3>Membership Types:</h3>
                        <p>
                            @if (item.MemberMembershipTypes != null && item.MemberMembershipTypes.Any())
                            {
                                @string.Join(", ", item.MemberMembershipTypes.Select(mmt => mmt.MembershipType.Name))
                            }
                            else
                            {
                                <span>No Membership Type Assigned</span>
                            }
                        </p>
                    </div>
                </div>
                <div class="card-actions">
                    <a href="#" class="btn btn-outline-danger btn-sm" data-bs-toggle="tooltip" title="Archive this member">
                        <i class="fas fa-archive"></i>
                    </a>
                    <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-primary btn-sm" data-bs-toggle="tooltip" title="View member details">
                        <i class="fas fa-info-circle"></i>
                    </a>
                </div>
            </div>
        }
    </section>

    <section class="table-responsive" id="table-view" style="display: none;">
        <table class="table custom-table" id="membersTable">
            <thead>
                <tr>
                    <th>Logo</th>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Company Size</th>
                    <th>Member Since</th>
                    <th>Status</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr data-name="@item.MemberName.ToLower()" data-status="@item.MembershipStatus.ToString().ToLower()">
                        <td>
                            @if (item.MemberThumbnail?.Content != null)
                            {
                                string imageBase64 = Convert.ToBase64String(item.MemberThumbnail.Content);
                                string imageSrc = string.Format("data:{0};base64,{1}", item.MemberThumbnail.MimeType, imageBase64);
                                <img src="@imageSrc" alt="@item.MemberName Logo" class="img-fluid rounded" style="max-width: 50px;" />
                            }
                            else
                            {
                                <i class="fas fa-building"></i>
                            }
                        </td>
                        <td>@item.MemberName</td>
                        <td>
                            @if (item.MemberMembershipTypes != null && item.MemberMembershipTypes.Any())
                            {
                                @string.Join(", ", item.MemberMembershipTypes.Select(mmt => mmt.MembershipType.Name))
                            }
                            else
                            {
                                <span>No Membership Type Assigned</span>
                            }
                        </td>
                        <td>@item.CompanySize</td>
                        <td>@item.MemberSince.ToShortDateString()</td>
                        <td><span class="status-badge status-@item.MembershipStatus.ToString().ToLower()">@item.MembershipStatus</span></td>
                        <td class="text-center">
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-sm btn-primary" data-bs-toggle="tooltip" title="View member details">Details</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </section>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const cardsView = document.getElementById('cards-view');
            const tableView = document.getElementById('table-view');
            const viewButtons = document.querySelectorAll('.view-btn');
            const memberNameFilter = document.getElementById('memberNameFilter');
            const membershipStatusFilter = document.getElementById('membershipStatusFilter');

            function setView(view) {
                cardsView.style.display = view === 'cards' ? 'grid' : 'none';
                tableView.style.display = view === 'table' ? 'block' : 'none';
                viewButtons.forEach(btn => btn.classList.toggle('active', btn.dataset.view === view));
                localStorage.setItem('preferredView', view);
            }

            viewButtons.forEach(button => {
                button.addEventListener('click', function () {
                    setView(this.dataset.view);
                });
            });

            //Always reset to GoodStanding when page load
            membershipStatusFilter.value = "GoodStanding";

            function filterMembers() {
                const nameFilter = memberNameFilter.value.toLowerCase();
                const statusFilter = membershipStatusFilter.value.toLowerCase();
                const members = document.querySelectorAll('.member-card, #membersTable tbody tr');

                members.forEach(member => {
                    const name = (member.dataset.name || '').toLowerCase();
                    const status = (member.dataset.status || '').toLowerCase();
                    const nameMatch = name.includes(nameFilter);
                    const statusMatch = statusFilter === '' || status === statusFilter;

                    member.style.display = nameMatch && statusMatch ? '' : 'none';
                });
            }

            memberNameFilter.addEventListener('input', filterMembers);
            membershipStatusFilter.addEventListener('change', filterMembers);

            //Initialize view preference
            const preferredView = localStorage.getItem('preferredView') || 'cards';
            setView(preferredView);

            //Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Apply GoodStanding filter when page load
            filterMembers();
        });

    </script>
}